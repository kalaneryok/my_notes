1.什么事文件系统
	操作系统中负责管理和存储文件信息的软件机构称为文件管理系统，简称文件系统
	即在存储设备上组织文件的方法和管理
2.常用的文件系统
	fat、NTFS、fat32、ext2、ext3日志式文件系统、ext4、jffs、cramfs、yaffs
	由于嵌入式系统自身存在一些特殊要求，使得一些传统的文件系统(如FAT、EXT2等) 并不十分适合。
	专用的嵌入式文件系统应有一些自身的特性，如文件系统面对的储存介质特殊性、
	文件系统应具有的跨平台的安全性，以及整个系统的即时性等
	三种文件系统的介绍
Cramfs
        Cramfs是Linux的创始人Linus Torvalds开发的一种只读文件系统，采用了zlib压缩，压缩比一般可以达到1：2，
		但仍可以做到高效的随机读取。在Linux系统中，通常把不需要经常修改的目录压缩存放，
		在系统引导时再将压缩文件解开。Cramfs并不需要一次性地把文件系统的所有内容都解压到记忆体中，
		而只是在系统需要访问某个位置的资料时，马上计算出该资料在Cramfs中的位置，将其解压缩到记忆体之中，
		然后通过对记忆体的访问来获取需要读取的资料。
 
JFFS2
        JFFS意为「Journaling Flash File System」，该文件系统是瑞典Axis通信公司开发的一种基于Flash记忆体的日志文件系统。
		该公司于1999年在GNU/Linux上发行了第一版JFFS文件系统，后来经过Redhat公司的发展，
		现在已经发行了第二个版本的JFFS2，其全部程式码都是可供研究开发的。
		它在设计时充分考虑了嵌入式系统中Flash记忆体的读写特性，确保在系统掉电时，正在读写的文件不受影响；
		同时，其储存策略以及抗疲劳性等方面也在第一版的基础上进行了改进。目前，JFFS2广泛应用于嵌入式系统中，
		尤其是嵌入式μClinux作业系统中。
 
YAFFS2
        YAFFS意为「Yet Another Flash File System」，
		是目前唯一一个专门为NAND Flash设计的文件系统。它采用了类日志结构，结合NAND Flash的特点，
		提供了损耗平衡和掉电保护机制，可以有效地避免意外掉电对文件系统一致性和完整性的影响。
		Aleph One公司于2002年5月发布了第一版YAFFS程式码，用户可以很方便地在网站上下载到。
		第一版的YAFFS只支援每页512位元组的NAND Flash。YAFFS2是YAFFS的升级版，
		即支援每页512位元组的NAND Flash记忆体，也支援每页2048位元组的NAND Flash记忆体
网络文件系统NFS (Network File System)
		NFS是由Sun开发并发展起来的一项在不同机器、不同操作系统之间通过网络共享文件的技术。
		在嵌入式Linux系统的开发调试阶段，可以利用该技术在主机上建立基于NFS 的根文件系统，挂载到嵌入式设备，
		可以很方便地修改根文件系统的内容。以上讨论的都是基于存储设备的文件系统(memory-based file system)，
		它们都可用作Linux的根文件系统。实际上，Linux还支持逻辑的或伪文件系统(logical or pseudo file system)，
		例如procfs(proc文件系统)，用于获取系统信息，以及devfs(设备文件系统)和sysfs，用于维护设备文件。
ramfs
		ramfs是一种基于linux磁盘缓存机制的文件系统，它是在页缓冲和目录缓冲之上的一层很薄的封装，代码量极少。
		ramfs的底层存储是ram，ramfs在mount时可以指定size，
		但是你仍然可以往其上写入一个很大的文件，由此导致ram被吃光。ramfs只能被root访问
tmpfs
		tmpfs算是ramfs的加强版，它可以使用内存或swqp分区作为存储，它使用了虚拟内存的机制，
		它将所有文件保存在虚拟内存中。tmpfs占用的内存有大小的限制，可以在mount时设置，当写入数据会导致超过size时会报错。tmpfs可以把暂时不用的东西回写到swap分区
initramfs
		rootfs可以被打包为一个cpio压缩包，并通过initrd=命令行参数传递给内核。也可以通过INITRAMFS_SOURCE选项直接编译进内核。

		initramfs会在内核启动启动完成后被解压为rootfs，kernel将检查rootfs中是否包含init文件。如果init文件存在，内核就会执行这个文件，并且赋予PID=1的进程号。这个init程序将整个系统引导起来，包括定位并且安装真正的root设备。如果在cpio文档解压缩后的rootfs中没有init程序(init文件)，内核执行旧的代码，定位并且安装root分区，执行/sbin/init程序。
initrd
		initramfs是linux中现在常用的功能，在较老的linux中，用的则是initrd（initramdisk）。

		initramfs不依赖于任何其他文件系统，与initramfs不同，initrd模拟了一个磁盘（增加了linux块I/O的开销），因此，initrd要求内核镜像包含该“磁盘”的文件系统驱动程序。


3.根文件系统
	1.根文件系统首先是内核启动时所mount的第一个文件系统，内核代码映像文件保存在根文件系统中，而系统引导启动程序会在根文件系统挂载之后从中把一些基本的初始化脚本和服务等加载到内存中去运行
	2.每个文件系统实现（比如 ext2、JFS 等等）导出一组通用接口，供 VFS 使用。缓冲区缓存会缓存文件系统和相关块设备之间的请求
		可以使用 sync 命令将缓冲区缓存中的请求发送到存储媒体（迫使所有未写的数据发送到设备驱动程序，进而发送到存储设备
	3.Linux启动时，第一个必须挂载的是根文件系统；若系统不能从指定设备上挂载根文件系统，则系统会出错而退出启动。成功之后可以自动或手动挂载其他的文件系统。因此，一个系统中可以同时存在不同的文件系统
	4.在 Linux 中将一个文件系统与一个存储设备关联起来的过程称为挂载（mount）。使用 mount 命令将一个文件系统附着到当前文件系统层次结构中（根）。在执行挂装时，要提供文件系统类型、文件系统和一个挂装点。
	根文件系统被挂载到根目录下“/”上后，在根目录下就有根文件系统的各个目录，文件：/bin /sbin /mnt等，再将其他分区挂接到/mnt目录上，/mnt目录下就有这个分区的各个目录，文件
	