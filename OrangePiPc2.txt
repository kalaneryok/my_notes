1.下载uboot的git代码编译uboot需要gcc6.0以上版本
	1.编译发现swig没有，安装 sudo apt-get install swig
	2.在编译发现Python.h没找到安装sudo apt-get install python-dev
	3.在编译缺少dtc工具 安装dtc  sudo apt-get install device-tree-compiler
2.下载安装sunxitool工具
	1.安装usb库
		sudo apt-get install libusb-1.0-0-dev
	2.下载sunxi-tool源码或者网网盘下载
		git clone https://github.com/linux-sunxi/sunxi-tools
	3.编译详情可以看github上面的readme
		make tools
		sudo make install-tools 安装到/usr/local/bin目录下
		
		
		
kernel
	1.下载源码  解压  tar -xzf linux.tar.gz
	2.make ARCH=arm64 CROSS_COMPILE=aarch64-linux-gnu- defconfig
	/bin/sh: 1: bison: not found，，安装 sudo apt-get install bison
	/bin/sh: 1: flex: not found       sudo apt-get install flex
	3.make ARCH=arm64 CROSS_COMPILE=aarch64-linux-gnu- dtbs
	dtb文件在arch/arm64/boot/dts/相关平台的目录下
	Image则在arm64/boot下

	
在uboot下
1.设置serverip  iddr
	setenv ipaddr 192.168.5.120
	setenv serverip 192.168.5.16
2.tftp uimage 和dtbs
	tftp 40080000 Image
	tftp 4FA00000 sun50i-h5-orangepi-pc2.dtb
	booti 40080000 - 4fa00000
3.挂载rootfs内核就起来了
4.挂载nfs文件系统
	https://blog.csdn.net/thisway_diy/article/details/68067350
	https://blog.csdn.net/qq695104815/article/details/79050780
	https://www.cnblogs.com/Jasonsblog/p/3778485.html
	1.在linux下安装nfs服务器
	先下载NFS服务器，演示如下： 
	sudo apt-get install nfs-kernel-server 
	2.创建nfs目录注意修改权限777
	3.修改配置文件

	NFS服务的配置文件路径：/etc/exports,刚安装完的配置文件只有一些说明。

	#sudo vi /etc/exports
	在里面加入

	/nfsboot *(rw,sync,no_root_squash)
	说明：

	/nfsboot是要共享的目录

	*代表允许所有的网络段访问，为安全起见，可指定网络号段，如202.38.214*，注意：*与（之间不能有空格，否则开发板挂载之后将只有读权限而没有写权限。

	rw是可读写权限

	sync是资料同步写入内存和硬盘

	no_root_squash是NFS客户端分享目录使用者的权限，
	如果客户端使用的是root用户，那么对于该共享目录而言，该客户端就具有root权限
	4.重启服务

	使用以下命令重启服务

	#sudo /etc/init.d/nfs-kernel-server restart
	5.测试服务器

	查看服务器目录和权限

	#showmount -e
	6.本地挂载测试
		使用mount   
		mount [-t vfstype] [-o options] device dir 
		mount 的用法，-t表示挂载文件系统 nfs表示挂载nfs文件系统
		sudo mount -t nfs 192.168.100.128:/home/ak/zhizuo/nfsDir/rootfs ~/zhizuo/my_GitWork/temp/aaa/
		                  localhost：也可以
		即把分享的目录挂载到了 aaa目录下
		可以使用df 查看
		不用时umount掉aaa即可

		
5.开发板与宿主机通过NFS连接，有时候会会出现下列问题:connection refused

 nfs mount 默认选项包括文件锁，依赖于portmap提供的动态端口分配功能。
        解决方法：kill 文件锁（lockd）或者mount -o nolock

        于是尝试mount -o nolock -t nfs 192.168.43.143:/home/yuming/nfs/rootfs /mnt，正常工作。
--------------------- 
作者：念念有余 
来源：CSDN 
原文：https://blog.csdn.net/u012142460/article/details/78832355 
版权声明：本文为博主原创文章，转载请附上博文链接！
	
6.开发板电脑虚拟机三者ping通必须使用桥接模式切只能设置在同一网段
	1.设置虚拟机-》设置-》桥接模式
	2.编辑-》虚拟网络编辑器-》设置桥接到那个网卡
	3.手动设置虚拟机的网络ip网关。
	4.测试
	
rootfs
	1.去官网下载最新busybox    https://busybox.net/
	2.解压tar -xjf busybox-1.30.1.tar.bz2
	修改Makefile，找到 （此处需修改Makefile）
	ARCH ？= $(SUBARCH)
	CROSS_COMPILE ?= 
		 改为：
	ARCH ？= arm （后面不能有空格）
	CROSS_COMPILE ?= arm-linux-
	3.解压后make defconfig
	4.make menuconfig  会出错curses.h找不到 安装sudo apt-get install libncurses5-dev
	5.make CROSS_COMPILE=aarch64-linux-gnu-    make ARCH=arm64 CROSS_COMPILE=aarch64-linux-gnu-   指定编译器编译
	6.make install 生成_install目录
	7.将_install目录下的文件全部拷贝到nfs服务器下顺便在创建其他目录和文件
		cp ./* rootfs/ -ra
		切记一定要带上-a的参数，因为bin目录里大部分都是链接，如果不带-a的参数，拷过去之后会做相应的复制，不再是链接的形式
	8.
	mkdir  dev etc lib mnt opt proc  srv sys tmp  var
	cd etc 
	mkdir init.d network
	cd network
	touch if-down.d if-post-down.d if-pre-up.d if-up.d
	cd ../var
	mkdir run
	cd ../
	9.以上制作方式挂载不上nfs文件系统后来发现内核没有配置网卡驱动
	10.复制uboot下的网卡驱动文件到	drivers/net/ethernet/allwinner/ 及修改该目录下的Makefile将驱动编译进内核
		config文件
			CONFIG_ETHERNET=y
			CONFIG_NET_VENDOR_ALLWINNER=y
			#CONFIG_SUN4I_EMAC=y
			CONFIG_SUN8I_EMAC=y
	11.上述修改后还是挂载不上，现在计划使用initramfs来确定网卡驱动是否可以用了
initranfs
	1.自行编写init程序验证
	2.编写init.c
	#include< stdio.h>

	int main(void) 
	{ 
			char ch; 

			printf("Test /sbin/init main....\n"); 
			printf("0123456789abcdefghijklmnopqrstuvwxyz\n"); 
			printf("ABCDEFGHIJKLMNOPQRSTUVWXYZ9876543210\n"); 

			while ((ch = getchar()) != 'q') 
					printf("%c", ch); 

			return 0; 
	}
	3.编译 aarch64-linux-gnu-gcc -static -o init init.c
	4.打包成initranfs格式
		1.新建一个rootfs目录 记住这个目录的地址initramfs——dir
		2.将编译好的init 放到上面地址的sbin目录下
		3.进到initranfs目录下执行打包命令
			find . | cpio -H newc -o | gzip -9 > ./initramfs.cpio.gz

		4.在内核中将这个包文件包含进去
			1.配置内核
				1.确保general setup 中选中了init ram filsystem
				2.指定包文件的路径initramfs source file 就填上面的路径
				3.假如找不到也可以在config文件中指定
				这个kconfig在user目录下的
				CONFIG_INITRAMFS_SOURCE="/home/ak/zhizuo/nfsDir/initranfs/rootfs/initramfs.cpio.gz"
			2.device driver 设置
				1.block devices-> 染blockdevicesupport
				2.或者CONFIG_BLK_DEV_RAM=y
		5.估计需要配置ram0的地址在设备树文件中设置可能是
				